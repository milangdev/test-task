import React from "react";
import ChartIcon from "../images/ChartIcon.png";

const flexColClass = "flex flex-col";
const popoverClass = "p-6 rounded-lg bg-[#151314] text-white";

const UpperArrow = () => (
  <svg
    width="12"
    height="13"
    viewBox="0 0 12 13"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M6.01325 9.5C5.72684 9.49994 5.45218 9.39476 5.24969 9.2076L0.929687 5.21577C0.826536 5.12372 0.744259 5.0136 0.687657 4.89184C0.631056 4.77009 0.601262 4.63914 0.600016 4.50663C0.59877 4.37412 0.626096 4.24271 0.680399 4.12006C0.734703 3.99742 0.814896 3.886 0.9163 3.7923C1.0177 3.69859 1.13829 3.62449 1.27102 3.57432C1.40374 3.52414 1.54596 3.49889 1.68936 3.50004C1.83276 3.50119 1.97448 3.52872 2.10624 3.58102C2.23801 3.63332 2.35718 3.70935 2.45681 3.80466L6.01325 7.09093L9.56969 3.80466C9.77338 3.62288 10.0462 3.52229 10.3294 3.52456C10.6125 3.52684 10.8834 3.63179 11.0836 3.81682C11.2839 4.00185 11.3975 4.25215 11.3999 4.51381C11.4024 4.77547 11.2935 5.02756 11.0968 5.21577L6.77681 9.2076C6.57431 9.39476 6.29966 9.49994 6.01325 9.5Z"
      fill="#898587"
    />
  </svg>
);

const Plus = () => (
  <svg
    width="12"
    height="13"
    viewBox="0 0 12 13"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10.2666 5.96589H6.53328V2.23255C6.53328 2.0911 6.47709 1.95545 6.37707 1.85543C6.27706 1.75541 6.1414 1.69922 5.99995 1.69922C5.8585 1.69922 5.72285 1.75541 5.62283 1.85543C5.52281 1.95545 5.46662 2.0911 5.46662 2.23255V5.96589H1.73328C1.59184 5.96589 1.45618 6.02208 1.35616 6.1221C1.25614 6.22212 1.19995 6.35777 1.19995 6.49922C1.19995 6.64067 1.25614 6.77632 1.35616 6.87634C1.45618 6.97636 1.59184 7.03255 1.73328 7.03255H5.46662V10.7659C5.46662 10.9073 5.52281 11.043 5.62283 11.143C5.72285 11.243 5.8585 11.2992 5.99995 11.2992C6.1414 11.2992 6.27706 11.243 6.37707 11.143C6.47709 11.043 6.53328 10.9073 6.53328 10.7659V7.03255H10.2666C10.4081 7.03255 10.5437 6.97636 10.6437 6.87634C10.7438 6.77632 10.8 6.64067 10.8 6.49922C10.8 6.35777 10.7438 6.22212 10.6437 6.1221C10.5437 6.02208 10.4081 5.96589 10.2666 5.96589Z"
      fill="white"
    />
  </svg>
);

const Refresh = () => (
  <svg
    width="12"
    height="13"
    viewBox="0 0 12 13"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10.8889 5.9C10.5509 5.9 10.2778 6.1688 10.2778 6.5C10.2778 8.816 8.35828 10.7 6 10.7C4.87067 10.7 3.80183 10.256 3.01228 9.5H4.77778C5.11572 9.5 5.38889 9.2312 5.38889 8.9C5.38889 8.5688 5.11572 8.3 4.77778 8.3H1.87683C1.75583 8.2754 1.62933 8.2898 1.50894 8.342C1.49794 8.3462 1.48633 8.348 1.47533 8.3528C1.46739 8.357 1.45883 8.3564 1.45089 8.3606C1.43439 8.3702 1.42522 8.3858 1.40933 8.396C1.23394 8.5022 1.11111 8.6834 1.11111 8.9V11.9C1.11111 12.2312 1.38428 12.5 1.72222 12.5C2.06017 12.5 2.33333 12.2312 2.33333 11.9V10.508C3.32944 11.3846 4.62806 11.9 6 11.9C9.03294 11.9 11.5 9.4772 11.5 6.5C11.5 6.1688 11.2268 5.9 10.8889 5.9Z"
      fill="white"
    />
    <path
      d="M1.72222 6.5C1.72222 4.184 3.64172 2.3 6 2.3C7.12933 2.3 8.19817 2.744 8.98772 3.5H7.22222C6.88428 3.5 6.61111 3.7688 6.61111 4.1C6.61111 4.4312 6.88428 4.7 7.22222 4.7H10.1219C10.2436 4.7252 10.3713 4.7102 10.4917 4.6574C10.5027 4.6532 10.5143 4.6514 10.5253 4.6466C10.5332 4.6424 10.5418 4.643 10.5497 4.6388C10.5662 4.6292 10.5754 4.6136 10.5913 4.6034C10.7661 4.4978 10.8889 4.3166 10.8889 4.1V1.1C10.8889 0.7688 10.6157 0.5 10.2778 0.5C9.93983 0.5 9.66667 0.7688 9.66667 1.1V2.492C8.67056 1.6154 7.37194 1.1 6 1.1C2.96706 1.1 0.5 3.5228 0.5 6.5C0.5 6.8312 0.773167 7.1 1.11111 7.1C1.44906 7.1 1.72222 6.8312 1.72222 6.5Z"
      fill="white"
    />
  </svg>
);

const Dollar = () => (
  <svg
    width="12"
    height="12"
    viewBox="0 0 12 12"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <g clip-path="url(#clip0_5278_7938)">
      <path
        d="M6.22997 5.23921C5.60922 5.11406 5.06384 4.77746 4.70464 4.2978C4.64699 4.22186 4.60682 4.13599 4.58657 4.04541C4.56633 3.95483 4.56643 3.86144 4.58686 3.77089C4.76417 3.18544 5.76527 2.85934 6.73372 3.07479C7.18539 3.16587 7.59481 3.38339 7.90508 3.69713C7.98657 3.78571 8.0864 3.85868 8.19883 3.91184C8.31126 3.96501 8.43407 3.99732 8.5602 4.00691C8.68633 4.0165 8.8133 4.00319 8.93378 3.96775C9.05427 3.9323 9.1659 3.87541 9.26227 3.80035C9.35863 3.7253 9.43781 3.63356 9.49527 3.53041C9.55273 3.42726 9.58732 3.31474 9.59706 3.19932C9.60679 3.0839 9.59149 2.96786 9.55201 2.85787C9.51254 2.74788 9.44968 2.64611 9.36704 2.55842C8.79509 1.9639 8.03412 1.54793 7.19074 1.36879C7.13954 1.35708 7.08961 1.35591 7.0384 1.34654V0.878177C7.0384 0.64527 6.93725 0.421902 6.75719 0.257212C6.57713 0.0925219 6.33291 0 6.07827 0C5.82363 0 5.57941 0.0925219 5.39935 0.257212C5.21929 0.421902 5.11814 0.64527 5.11814 0.878177V1.36059C4.56645 1.4577 4.05378 1.68954 3.63446 2.03153C3.21514 2.37351 2.90481 2.8129 2.73637 3.30312C2.64692 3.62009 2.62848 3.95034 2.68216 4.27401C2.73584 4.59767 2.86053 4.90806 3.04873 5.18651C3.66806 6.0784 4.64815 6.70983 5.77487 6.94287C6.39587 7.0682 6.94132 7.40526 7.3002 7.88545C7.35793 7.96136 7.39819 8.04721 7.41854 8.13778C7.4389 8.22836 7.43892 8.32177 7.41861 8.41235C7.24003 8.9978 6.23829 9.32273 5.27112 9.10845C4.81485 9.01739 4.40186 8.79645 4.09144 8.47734C3.92729 8.3008 3.6935 8.19077 3.44103 8.17122C3.18856 8.15167 2.93787 8.22419 2.74361 8.37298C2.54936 8.52176 2.42727 8.73475 2.40397 8.96551C2.38067 9.19628 2.45805 9.42611 2.61923 9.60492C3.19342 10.211 3.96302 10.6349 4.8173 10.8156C4.91715 10.8379 5.01636 10.849 5.11622 10.8654V11.1218C5.11622 11.3547 5.21737 11.5781 5.39743 11.7428C5.57749 11.9075 5.82171 12 6.07635 12C6.33099 12 6.57521 11.9075 6.75527 11.7428C6.93533 11.5781 7.03648 11.3547 7.03648 11.1218V10.7969C7.55851 10.6826 8.03898 10.4459 8.43058 10.1101C8.82218 9.77429 9.11139 9.351 9.26975 8.88188C9.35899 8.56486 9.37727 8.2346 9.32348 7.91096C9.2697 7.58731 9.14495 7.27694 8.95675 6.99849C8.33768 6.10555 7.35735 5.47305 6.22997 5.23921Z"
        fill="#E74694"
      />
    </g>
    <defs>
      <clipPath id="clip0_5278_7938">
        <rect width="12" height="12" fill="white" />
      </clipPath>
    </defs>
  </svg>
);

const Share = () => (
  <svg
    width="13"
    height="12"
    viewBox="0 0 13 12"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <g clip-path="url(#clip0_5293_7778)">
      <path
        d="M10.6201 11H1.14724C0.896004 11 0.655057 10.9012 0.477406 10.7254C0.299755 10.5496 0.199951 10.3111 0.199951 10.0625V1.9375C0.199951 1.68886 0.299755 1.4504 0.477406 1.27459C0.655057 1.09877 0.896004 1 1.14724 1C1.39848 1 1.63942 1.09877 1.81708 1.27459C1.99473 1.4504 2.09453 1.68886 2.09453 1.9375V9.125H10.6201C10.8714 9.125 11.1123 9.22377 11.29 9.39959C11.4676 9.5754 11.5674 9.81386 11.5674 10.0625C11.5674 10.3111 11.4676 10.5496 11.29 10.7254C11.1123 10.9012 10.8714 11 10.6201 11Z"
        fill="#E74694"
      />
      <path
        d="M3.67335 8.5C3.49742 8.5 3.32498 8.45152 3.17533 8.35998C3.02568 8.26845 2.90474 8.13749 2.82606 7.98176C2.74739 7.82604 2.71409 7.65171 2.72988 7.47831C2.74568 7.30491 2.80996 7.13928 2.91551 7L4.81009 4.5C4.95538 4.30831 5.16933 4.17895 5.40799 4.1385C5.64664 4.09805 5.89189 4.14958 6.09335 4.2825L7.16127 4.98687L8.54494 2.70562C8.61086 2.59683 8.69841 2.5024 8.80228 2.42807C8.90615 2.35373 9.02418 2.30103 9.14923 2.27316C9.27429 2.24529 9.40375 2.24282 9.52979 2.26591C9.65584 2.28901 9.77583 2.33717 9.88251 2.4075L11.7771 3.6575C11.9865 3.79541 12.1319 4.00999 12.1814 4.25402C12.2309 4.49805 12.1804 4.75155 12.0411 4.95875C11.9017 5.16595 11.6849 5.30988 11.4383 5.35887C11.1917 5.40787 10.9356 5.35791 10.7262 5.22L9.65832 4.51562L8.27465 6.79687C8.20873 6.90567 8.12118 7.0001 8.01731 7.07443C7.91344 7.14877 7.7954 7.20147 7.67035 7.22934C7.5453 7.25721 7.41584 7.25968 7.28979 7.23658C7.16375 7.21349 7.04376 7.16533 6.93707 7.095L5.78833 6.33687L4.43118 8.125C4.34294 8.24143 4.22852 8.33594 4.09699 8.40102C3.96545 8.46611 3.82041 8.5 3.67335 8.5Z"
        fill="#E74694"
      />
    </g>
    <defs>
      <clipPath id="clip0_5293_7778">
        <rect
          width="12"
          height="12"
          fill="white"
          transform="translate(0.199951)"
        />
      </clipPath>
    </defs>
  </svg>
);

const Equity = () => (
  <svg
    width="13"
    height="12"
    viewBox="0 0 13 12"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <g clip-path="url(#clip0_5293_602)">
      <path
        d="M7.27991 2.36692L5.52524 0.242505C5.46922 0.175202 5.39977 0.119389 5.32099 0.0783583C5.24222 0.0373274 5.15571 0.0119098 5.06657 0.00360497C4.8876 -0.0119355 4.70952 0.0413995 4.57124 0.151955L1.84724 2.36692H7.27991Z"
        fill="#E74694"
      />
      <path
        d="M5.73324 8.14677V7.50456C5.73324 6.82327 6.01419 6.16988 6.51428 5.68813C7.01438 5.20638 7.69266 4.93574 8.3999 4.93574H11.7332V4.29354C11.7332 4.12321 11.663 3.95986 11.538 3.83943C11.4129 3.71899 11.2434 3.65133 11.0666 3.65133H1.06657C0.889758 3.65133 0.720189 3.71899 0.595164 3.83943C0.47014 3.95986 0.399902 4.12321 0.399902 4.29354V11.3578C0.399902 11.5281 0.47014 11.6915 0.595164 11.8119C0.720189 11.9323 0.889758 12 1.06657 12H11.0666C11.2434 12 11.4129 11.9323 11.538 11.8119C11.663 11.6915 11.7332 11.5281 11.7332 11.3578V10.7156H8.3999C7.69266 10.7156 7.01438 10.4449 6.51428 9.9632C6.01419 9.48145 5.73324 8.82806 5.73324 8.14677Z"
        fill="#E74694"
      />
      <path
        d="M11.7332 6.22015H8.3999C8.04628 6.22015 7.70714 6.35547 7.45709 6.59635C7.20704 6.83722 7.06657 7.16392 7.06657 7.50456V8.14677C7.06657 8.48741 7.20704 8.81411 7.45709 9.05498C7.70714 9.29586 8.04628 9.43118 8.3999 9.43118H11.7332C11.91 9.43118 12.0796 9.36352 12.2046 9.24308C12.3297 9.12264 12.3999 8.9593 12.3999 8.78897V6.86236C12.3999 6.69203 12.3297 6.52869 12.2046 6.40825C12.0796 6.28781 11.91 6.22015 11.7332 6.22015ZM9.3999 8.46787C9.26805 8.46787 9.13915 8.43021 9.02952 8.35964C8.91989 8.28907 8.83444 8.18877 8.78398 8.07143C8.73352 7.95408 8.72032 7.82495 8.74605 7.70038C8.77177 7.5758 8.83526 7.46137 8.9285 7.37156C9.02173 7.28174 9.14052 7.22058 9.26984 7.1958C9.39916 7.17102 9.53321 7.18374 9.65502 7.23234C9.77684 7.28095 9.88096 7.36326 9.95422 7.46887C10.0275 7.57448 10.0666 7.69865 10.0666 7.82566C10.0666 7.99599 9.99633 8.15934 9.87131 8.27977C9.74628 8.40021 9.57671 8.46787 9.3999 8.46787Z"
        fill="#E74694"
      />
      <path
        d="M8.2419 2.36692H9.94657L8.1919 0.242505C8.08175 0.109141 7.92111 0.023393 7.74533 0.00412308C7.56954 -0.0151468 7.39301 0.0336403 7.25457 0.139752C7.11613 0.245863 7.02711 0.400607 7.00711 0.569941C6.9871 0.739275 7.03775 0.909329 7.1479 1.04269L8.2419 2.36692Z"
        fill="#E74694"
      />
    </g>
    <defs>
      <clipPath id="clip0_5293_602">
        <rect
          width="12"
          height="12"
          fill="white"
          transform="translate(0.399902)"
        />
      </clipPath>
    </defs>
  </svg>
);

const Avg = () => (
  <svg
    width="13"
    height="12"
    viewBox="0 0 13 12"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <g clip-path="url(#clip0_5293_6931)">
      <path
        d="M9.73908 4.46743L8.21353 8.17028C8.06914 8.52114 8.1225 8.91486 8.3573 9.22286C8.59209 9.53086 8.97756 9.71428 9.38939 9.71428H11.3443C11.7562 9.71428 12.1417 9.53028 12.3764 9.22286C12.6112 8.91486 12.6646 8.52114 12.5202 8.17028L10.9947 4.46743V3.93886C11.1868 3.976 11.3927 4 11.6225 4C11.969 4 12.2503 3.744 12.2503 3.42857C12.2503 3.11314 11.969 2.85714 11.6225 2.85714C11.0154 2.85714 10.6908 2.62857 10.1993 2.28229C9.75603 1.96971 9.2381 1.61429 8.44644 1.38514C8.27757 0.596571 7.5148 0 6.6001 0C5.67849 0 4.91258 0.606857 4.75124 1.404C4.10586 1.61943 3.70282 1.93429 3.35188 2.21086C2.87413 2.58571 2.5301 2.85714 1.57773 2.85714C1.23119 2.85714 0.949935 3.11314 0.949935 3.42857C0.949935 3.744 1.23119 4 1.57773 4C1.80939 4 2.01342 3.98286 2.20553 3.95943V4.468L0.679983 8.17086C0.53559 8.52171 0.588952 8.91543 0.823748 9.22343C1.05854 9.53028 1.44401 9.71428 1.85584 9.71428H3.8108C4.22263 9.71428 4.6081 9.53028 4.8429 9.22286C5.07769 8.91486 5.13106 8.52114 4.98666 8.17028L3.46112 4.46743V3.56971C3.73609 3.41714 3.96022 3.24229 4.17241 3.07543C4.41788 2.88229 4.66084 2.70743 4.97662 2.56857C5.19948 2.91714 5.54917 3.18629 5.9723 3.32343V10.8571H1.57773C1.23119 10.8571 0.949935 11.1131 0.949935 11.4286C0.949935 11.744 1.23119 12 1.57773 12H11.6225C11.969 12 12.2503 11.744 12.2503 11.4286C12.2503 11.1131 11.969 10.8571 11.6225 10.8571H7.22789V3.32343C7.66484 3.18171 8.02394 2.89886 8.24492 2.53257C8.739 2.70514 9.09119 2.94629 9.43083 3.18571C9.5319 3.25714 9.63675 3.32971 9.74535 3.40114C9.74473 3.41086 9.73908 3.41886 9.73908 3.42857V4.46743ZM6.6001 2.28571C6.25418 2.28571 5.9723 2.02914 5.9723 1.71429C5.9723 1.39943 6.25418 1.14286 6.6001 1.14286C6.94601 1.14286 7.22789 1.39943 7.22789 1.71429C7.22789 2.02914 6.94601 2.28571 6.6001 2.28571Z"
        fill="#E74694"
      />
    </g>
    <defs>
      <clipPath id="clip0_5293_6931">
        <rect
          width="12"
          height="12"
          fill="white"
          transform="translate(0.600098)"
        />
      </clipPath>
    </defs>
  </svg>
);

export const DashboardHeader = ({ metrics }) => {
  const headerCard = [
    {
      id: 1,
      title: "Balance",
      dollar: metrics.balance,
      per: metrics.average_profit,
      icon: <Dollar />,
    },
    {
      id: 2,
      title: "Net P&L",
      dollar: metrics.net_pl,
      per: metrics.average_pl,
      icon: <Share />,
    },
    {
      id: 3,
      title: "Equity",
      dollar: metrics.equity,
      per: ((metrics?.equity / metrics?.starting_balance) * 100)?.toFixed(1),
      icon: <Equity />,
    },
  ];

  const details = [
    { id: 1, title: "Trading Days", value: metrics.trading_days },
    { id: 2, title: "Daily DD", value: metrics.daily_dd + "%" },
    {
      id: 3,
      title: "Max Daily DD",
      value: metrics.max_daily_dd + "%",
      color: "red",
    },
    {
      id: 4,
      title: "Max DD",
      value: metrics.max_dd + "%",
      color: "red",
    },
    {
      id: 5,
      title: "Profit Target",
      value: metrics.profit_target + "%",
      color: "red",
    },
  ];

  return (
    <div className={"bg-bgMain p-6 my-10 w-[1368px] text-white"}>
      <div className="flex flex-row justify-between items-center mb-4">
        <div className={"flex items-center divide-x divide-borderMain gap-8"}>
          <div className="flex items-end gap-3">
            <img src={ChartIcon} alt="account-icon" />
            <div>
              <h2 className="text-lg font-semibold">SecondaryAccount</h2>
              <p className="text-secondary text-xs">
                Account ID: {metrics.account_id}
              </p>
            </div>
          </div>
          <div className="flex ps-8 space-x-6">
            {details.map(({ id, value, title, color }) => (
              <div className={flexColClass} key={id}>
                <span className="text-secondary text-xs">{title}</span>
                <span
                  className={`font-medium text-sm ${color && "text-" + color}`}
                >
                  {value}
                </span>
              </div>
            ))}
          </div>
        </div>
        <div className="flex gap-4">
          <button className="bg-none text-sm font-medium px-3 py-2 rounded-md border border-borderMain flex items-center gap-2">
            <span>This month</span>
            <UpperArrow />
          </button>
          <button className="bg-pink text-sm font-medium px-3 py-2 rounded-md flex items-center gap-2">
            <Plus />
            <span>Import trades</span>
          </button>
          <button className="bg-pink text-sm font-medium px-3 py-2 rounded-md flex items-center gap-2">
            <Refresh />
            <span>Update objectives</span>
          </button>
        </div>
      </div>
      <div className="grid grid-cols-5 gap-4 w-full">
        {headerCard.map(({ dollar, icon, id, per, title }) => {
          return (
            <div className={popoverClass} key={id}>
              <div className="flex items-top space-x-2">
                <div className="rounded-md h-6 w-6 bg-[#45152C] flex justify-center items-center">
                  {icon}
                </div>
                <div>
                  <span className="text-sm text-secondary">{title}</span>
                  <div className="mt-1">
                    <span className="text-lg font-semibold">
                      ${dollar?.toFixed(2)}{" "}
                      <span className="text-red font-normal text-sm">
                        ({per}%)
                      </span>
                    </span>
                  </div>
                </div>
              </div>
            </div>
          );
        })}
        <div className={popoverClass}>
          <div className="flex items-top space-x-2">
            <div className="rounded-md h-6 max-w-6 w-full bg-[#45152C] flex justify-center items-center">
              <Avg />
            </div>
            <div className="w-full">
              <span className="text-sm text-secondary">Avg Win / Loss</span>
              <div className="mt-1 flex gap-1">
                <div className="w-11/12 h-1.5 bg-green rounded-sm" />
                <div className="w-1/12 h-1.5 bg-red rounded-sm" />
              </div>
              <div className="mt-1 flex justify-between">
                <span>
                  ${(metrics.average_profit / metrics.average_loss)?.toFixed(2)}
                </span>
                <span className="text-red font-normal text-sm">
                  {metrics.average_loss}%
                </span>
              </div>
            </div>
          </div>
        </div>
        <div className={popoverClass}>
          <div className="flex h-full justify-evenly items-center gap-3">
            <div className="text-center">
              <p className="text-secondary text-sm">Win Rate</p>
              <p className="text-[#31C48D] text-lg font-semibold">
                {metrics.win_rate}%
              </p>
            </div>
            <div className="w-0.5 h-[21px] bg-borderMain" />
            <div className="text-center">
              <p className="text-secondary text-sm">Profit Factor</p>
              <p className="text-lg font-semibold">{metrics.profit_factor}</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};
